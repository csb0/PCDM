return(yg[1:m])
nhpp = function(cc, w, cyclic = TRUE) {
n = length(cc)
if (cyclic == TRUE) {
m = n * w
Q = diag(rep(12, m))
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)]
= Q[m, 1] = Q[1, m] = -8
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = Q[m - 1, 1]
= Q[m, 2] = Q[1, m - 1] = Q[2, m] = 2
} else {
m = n * w + 1
Q = diag(rep(12, m))
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)] = -8
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = 2
Q[1, 1] = Q[m, m] = 2
Q[2, 2] = Q[m - 1, m - 1] = 10
Q[1, 2] = Q[2, 1] = Q[m, m - 1] = Q[m - 1, m] = -4
}
Q = Q * w ˆ 2
if (cyclic == TRUE) {
E = matrix(0, n, m + 1)
rowpat = c(1, rep(2, w - 1), 1)
for (i in 1:n) {
j = (i - 1) * w + 1
E[i, j:(j + w)] = rowpat
}
E = E[ , -(m + 1)]
E[n, 1] = 1
} else {
E = matrix(0, n, m)
rowpat = c(1, rep(2, w - 1), 1)
for (i in 1:n) {
j = (i - 1) * w + 1
E[i, j:(j + w)] = rowpat
}
}
A = cbind(Q, t(E))
B = cbind(E, matrix(0, n, n))
C = rbind(A, B)
rhs = c(rep(0, m), 2 * w * cc)
yg = solve(C, rhs)
return(yg[1:m])
}
nhpp()
nhpp()
nhpp(cc,w,TRUE)
nhpp(cc,w,TRUE)
nhpp(cc,w,TRUE)
spl
nhpp(cc,w,TRUE)
nhpp <- function(cc, w, cyclic = TRUE) {
n = length(cc)
if (cyclic == TRUE) {
m = n * w
Q = diag(rep(12, m))
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)]
= Q[m, 1] = Q[1, m] = -8
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = Q[m - 1, 1]
= Q[m, 2] = Q[1, m - 1] = Q[2, m] = 2
} else {
m = n * w + 1
Q = diag(rep(12, m))
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)] = -8
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = 2
Q[1, 1] = Q[m, m] = 2
Q[2, 2] = Q[m - 1, m - 1] = 10
Q[1, 2] = Q[2, 1] = Q[m, m - 1] = Q[m - 1, m] = -4
}
Q = Q * w ˆ 2
if (cyclic == TRUE) {
E = matrix(0, n, m + 1)
rowpat = c(1, rep(2, w - 1), 1)
for (i in 1:n) {
j = (i - 1) * w + 1
E[i, j:(j + w)] = rowpat
}
E = E[ , -(m + 1)]
E[n, 1] = 1
} else {
E = matrix(0, n, m)
rowpat = c(1, rep(2, w - 1), 1)
for (i in 1:n) {
j = (i - 1) * w + 1
E[i, j:(j + w)] = rowpat
}
}
A = cbind(Q, t(E))
B = cbind(E, matrix(0, n, n))
C = rbind(A, B)
rhs = c(rep(0, m), 2 * w * cc)
yg = solve(C, rhs)
return(yg[1:m])
}
Q = Q*wˆ2
Q = Q*w^2
Q = Q*w^2
nhpp <- function(cc, w, cyclic = TRUE) {
n = length(cc)
if (cyclic == TRUE) {
m = n * w
Q = diag(rep(12, m))
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)]
= Q[m, 1] = Q[1, m] = -8
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = Q[m - 1, 1]
= Q[m, 2] = Q[1, m - 1] = Q[2, m] = 2
} else {
m = n * w + 1
Q = diag(rep(12, m))
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)] = -8
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = 2
Q[1, 1] = Q[m, m] = 2
Q[2, 2] = Q[m - 1, m - 1] = 10
Q[1, 2] = Q[2, 1] = Q[m, m - 1] = Q[m - 1, m] = -4
}
Q = Q*w^2
if (cyclic == TRUE) {
E = matrix(0, n, m + 1)
rowpat = c(1, rep(2, w - 1), 1)
for (i in 1:n) {
j = (i - 1) * w + 1
E[i, j:(j + w)] = rowpat
}
E = E[ , -(m + 1)]
E[n, 1] = 1
} else {
E = matrix(0, n, m)
rowpat = c(1, rep(2, w - 1), 1)
for (i in 1:n) {
j = (i - 1) * w + 1
E[i, j:(j + w)] = rowpat
}
}
A = cbind(Q, t(E))
B = cbind(E, matrix(0, n, n))
C = rbind(A, B)
rhs = c(rep(0, m), 2 * w * cc)
yg = solve(C, rhs)
return(yg[1:m])
}
nhpp
nhpp(cc,w,TRUE)
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhhp.R')
setwd("~/research/TaskRelatedGaborsSM/diffXtime/utilities")
nhpp(cc,w,TRUE)
nhpp
spl
spl(t,knots,c)
function
function
nhpp(cc,w,cyclic = TRUE)
blah <- nhpp(cc,w,cyclic = TRUE)
nhpp <- function(cc, w, cyclic = TRUE) {
n = length(cc)
if (cyclic == TRUE) {
m = n * w
Q = diag(rep(12, m))
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)]
= Q[m, 1] = Q[1, m] = -8
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = Q[m - 1, 1]
= Q[m, 2] = Q[1, m - 1] = Q[2, m] = 2
} else {
m = n * w + 1
Q = diag(rep(12, m))
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)] = -8
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = 2
Q[1, 1] = Q[m, m] = 2
Q[2, 2] = Q[m - 1, m - 1] = 10
Q[1, 2] = Q[2, 1] = Q[m, m - 1] = Q[m - 1, m] = -4
}
Q = Q*w^2
if (cyclic == TRUE) {
E = matrix(0, n, m + 1)
rowpat = c(1, rep(2, w - 1), 1)
for (i in 1:n) {
j = (i - 1) * w + 1
E[i, j:(j + w)] = rowpat
}
E = E[ , -(m + 1)]
E[n, 1] = 1
} else {
E = matrix(0, n, m)
rowpat = c(1, rep(2, w - 1), 1)
for (i in 1:n) {
j = (i - 1) * w + 1
E[i, j:(j + w)] = rowpat
}
}
A = cbind(Q, t(E))
B = cbind(E, matrix(0, n, n))
C = rbind(A, B)
rhs = c(rep(0, m), 2 * w * cc)
yg = solve(C, rhs)
return(yg[1:m])
}
rhs
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = Q[m - 1, 1]
Q[cbind(3:m, 1:(m - 2))] = Q[cbind(1:(m - 2), 3:m)] = Q[m - 1, 1]
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhhp.R')
g <- nhpp(cc,w,cyclic = TRUE)
g <- nhpp(cc,w,cyclic = TRUE)
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)]
g <- nhpp(cc,w,cyclic = TRUE)
setwd("~/research/TaskRelatedGaborsSM/diffXtime/utilities")
g <- nhpp(cc,w,cyclic = TRUE)
nhpp
g <- nhpp(cc,w,cyclic = TRUE)
attach()
attach(nhpp)
attach(nhpp.R)
attach()
attach(nhpp)
g <- nhpp(cc,w,cyclic = TRUE)
Q[cbind(2:m, 1:(m - 1))] = Q[cbind(1:(m - 1), 2:m)]
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
g <- nhpp(cc,w,cyclic = TRUE)
g <- nhpp(cc,w,cyclic = TRUE)
nhpp(cc,w,cyclic = TRUE)
load("~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R")
nhpp(cc,w,cyclic = TRUE)
matrix
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R')
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R', echo=TRUE)
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R', echo=TRUE)
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R', echo=TRUE)
source('~/research/TaskRelatedGaborsSM/diffXtime/utilities/nhpp.R', echo=TRUE)
cc<- [68.6 126 140.2 139.4 125.4 115 126.8 140.2 140 119.4 100.6 70.6 70.2]
cc-> [68.6 126 140.2 139.4 125.4 115 126.8 140.2 140 119.4 100.6 70.6 70.2]
cc -> [68.6 126 140.2 139.4 125.4 115 126.8 140.2 140 119.4 100.6 70.6 70.2]
cc <- c[68.6 126 140.2 139.4 125.4 115 126.8 140.2 140 119.4 100.6 70.6 70.2]
cc <- c(68.6 126 140.2 139.4 125.4 115 126.8 140.2 140 119.4 100.6 70.6 70.2)
cc
cc <- c(68.6, 126, 140.2, 139.4, 125.4, 115 , 126.8, 140.2, 140, 119.4, 100.6 ,70.6, 70.2)
cc
w = 4
w
nhpp(cc,w,cyclic = TRUE)
func = nhpp(cc,w,cyclic = TRUE)
func
plot(func)
func = nhpp(cc,8,cyclic = TRUE)
plot(func)
func = nhpp(cc,2,cyclic = TRUE)
plot(func)
cc <- 97	92	104	69	84	105	186	246	133	165	244	230	254	284	270	230	262	239	199	190	221	219	233	240	242	228	229	276	227	235	227	250	247	255	242	241	237	256	237	275	259	238	257	270	241	262	243	262	290	286	244	260	238	244	266	249	255	264	240	236	268	242	241	232	249	241	257	235	227	240	221	217	229	243	202	233	211	197	218	213	190	220	167	171	169	163	196	184	159	158	131	135	140	143	127	139	108	129	116
cc <- [97	92	104	69	84	105	186	246	133	165	244	230	254	284	270	230	262	239	199	190	221	219	233	240	242	228	229	276	227	235	227	250	247	255	242	241	237	256	237	275	259	238	257	270	241	262	243	262	290	286	244	260	238	244	266	249	255	264	240	236	268	242	241	232	249	241	257	235	227	240	221	217	229	243	202	233	211	197	218	213	190	220	167	171	169	163	196	184	159	158	131	135	140	143	127	139	108	129	116]
cc <- (97	92	104	69	84	105	186	246	133	165	244	230	254	284	270	230	262	239	199	190	221	219	233	240	242	228	229	276	227	235	227	250	247	255	242	241	237	256	237	275	259	238	257	270	241	262	243	262	290	286	244	260	238	244	266	249	255	264	240	236	268	242	241	232	249	241	257	235	227	240	221	217	229	243	202	233	211	197	218	213	190	220	167	171	169	163	196	184	159	158	131	135	140	143	127	139	108	129	116)
cc <-( (97	92	104	69	84	105	186	246	133	165	244	230	254	284	270	230	262	239	199	190	221	219	233	240	242	228	229	276	227	235	227	250	247	255	242	241	237	256	237	275	259	238	257	270	241	262	243	262	290	286	244	260	238	244	266	249	255	264	240	236	268	242	241	232	249	241	257	235	227	240	221	217	229	243	202	233	211	197	218	213	190	220	167	171	169	163	196	184	159	158	131	135	140	143	127	139	108	129	116))
cc <- (97,92,104,69,84,105,186,246,133,165,244,230,254,284,270,230,262,239,199,190,221,219,233,240,242,228,229,276,227,235,227,250,247,255,242,241,237,256,237,275,259,238,257,270,241,262,243,262,290,286,244,260,238,244,266,249,255,264,240,236,268,242,241,232,249,241,257,235,227,240,221,217,229,243,202,233,211,197,218,213,190,220,167,171,169,163,196,184,159,158,131,135,140,143,127,139,108,129,116
)
cc <- (97,92,104,69,84,105,186,246,133,165,244,230,254,284,270,230,262,239,199,190,221,219,233,240,242,228,229,276,227,235,227,250,247,255,242,241,237,256,237,275,259,238,257,270,241,262,243,262,290,286,244,260,238,244,266,249,255,264,240,236,268,242,241,232,249,241,257,235,227,240,221,217,229,243,202,233,211,197,218,213,190,220,167,171,169,163,196,184,159,158,131,135,140,143,127,139,108,129,116)
cc <- c(97,92,104,69,84,105,186,246,133,165,244,230,254,284,270,230,262,239,199,190,221,219,233,240,242,228,229,276,227,235,227,250,247,255,242,241,237,256,237,275,259,238,257,270,241,262,243,262,290,286,244,260,238,244,266,249,255,264,240,236,268,242,241,232,249,241,257,235,227,240,221,217,229,243,202,233,211,197,218,213,190,220,167,171,169,163,196,184,159,158,131,135,140,143,127,139,108,129,116
)
func = nhpp(cc,4,cyclic = TRUE)
plot(func)
func = nhpp(cc,2,cyclic = TRUE)
plot(func)
plot(func,type='l')
func = nhpp(cc,10,cyclic = TRUE)
plot(func,type='l')
func = nhpp(cc,4,cyclic = TRUE)
plot(func,type='l')
func = nhpp(cc,1,cyclic = TRUE)
plot(func,type='l')
func = nhpp(cc,3,cyclic = TRUE)
plot(func,type='l')
func = nhpp(cc,2,cyclic = TRUE)
plot(func,type='l')
cc <- c(13,10,14,14,11,13,17,20,14,8,11,14,16,16,14,11,9,11,21,15,16,9,15,13,13,11,9,14,18,16,9,16,9,13,9,5,6,8,11,11,11,11,13,15,5,12,19,13,12,12,10,10,16,14,9,14,20,25,20,18,26,22,24,23,19,27,28,32,32,29,25,26,37,47,44,39,30,40,27,28,35,36,16,21,18,15,9,13,13,12,12,13,19,17,21,30,27,26,32,36,45,41,32,30,28,45,40,35,34,28,27,36,42,32,32,33,30,32,24,31,41,41,32,39,33,36,38,28,29,44,41,46,35,37,45,36,35,45,41,38,35,47,29,33,36,32,42,41,40,38,34,33,30,34,28,27,34,28,31,36,31,38,39,32,39,29,39,49,34,33,45,33,28,34,27,37,33,29,30,33,29,29,35,33,26,17,35,32,30,13,29,28,29,30,29,28,23,24,26,31,31,26,28,32,30,27,24,44,35,33,34,40,26,26,22,37,35,27,30,27,30,36,42,38,42,29,28,21,32,40,43,38,40,30,32,29,25,30,34,37,42,30,25,35,38,37,38,38,38,30,34,32,32,46,42,30,29,33,23,24,30,33,30,32,33,38,33,32,37,32,38,42,38,37,46,34,39,46,40,37,32,34,34,31,23,30,34,42,33,33,38,34,28,24,40,31,32,43,32,27,37,32,31,24,33,36,29,26,32,34,32,28,25,36,54,42,31,30,36,45,29,32,41,44,31,27,33,34,41,37,34,37,41,36,26,28,42,38,37,42,40,39,33,19,39,37,41,33,35,28,36,40,29,28,31,31,40,41,39,30,23,34,35,24,31,38,33,32,34,44,46,37,32,33,44,32,31,32,33,33,37,30,36,32,37,32,23,42,40,36,36,34,39,40,36,37,46,46,41,32,39,31,36,48,41,34,28,33,35,48,37,30,33,30,34,30,35,42,34,30,32,37,35,44,33,31,39,46,44,32,47,29,29,39,44,43,40,42,35,37,40,28,33,32,33,35,39,36,32,36,47,58,42,33,27,37,32,32,30,34,44,34,27,30,36,35,41,34,33,32,41,42,38,33,40,37,30,43,42,34,34,34,44,56,42,40,49,38,40,44,45,42,39,45,48,44,28,29,36,47,43,36,27,34,33,38,40,37,36,30,39,34,29,34,41,37,47,40,37,39,44,36,40,33,31,36,30,41,33,29,36,32,29,38,47,47,38,32,31,32,39,36,40,48,47,40,32,40,36,36,30,39,29,27,39,37,37,38,35,43,41,28,37,44,41,38,41,36,35,33,38,34,35,39,39,45,45,43,33,32,32,35,35,41,43,33,33,38,28,29,35,36,35,40,38,25,27,31,40,34,46,36,42,38,34,39,42,34,33,42,33,27,35,41,39,35,44,39,32,28,37,38,26,32,44,30,30,42,44,33,27,32,28,31,33,35,38,37,39,35,34,36,40,37,36,34,36,26,39,36,27,33,36,33,33,25,34,43,35,36,32,37,41,33,34,44,32,47,34,35,36,29,29,38,35,21,31,42,46,32,34,27,30,36,40,38,25,28,36,42,37,37,27,31,33,43,36,38,31,34,35,32,32,32,34,36,42,33,37,25,30,32,42,34,28,22,27,28,36,34,30,33,38,34,30,34,30,35,33,24,28,26,36,37,26,34,34,44,43,33,32,38,25,26,32,27,23,24,27,27,27,34,25,31,34,28,32,39,45,38,31,33,36,30,27,29,20,29,33,31,34,29,24,26,27,28,29,28,27,31,32,34,24,23,35,25,35,36,37,35,34,36,38,39,34,30,36,27,26,18,21,33,28,31,22,17,36,33,26,23,35,29,33,41,41,28,29,27,23,38,27,28,23,21,16,26,21,16,27,30,34,22,15,23,17,17,26,28,26,28,25,28,24,15,17,26,25,30,28,19,24,22,21,20,23,21,25,20,24,26,33,30,26,31,26,35,27,21,24,28,30,33,19,18,23,28,28,28,25,28,24,19,19,27,28,17,19,27,21,27,22,14,26,26,18,28,20,18,25,25,22,13,14,14,15,20,22,19,18,25,22,17,16,16,17,12,21,24,23,21,24,25,16,21,32,31,14,16,14,16,23,24,18,17,17,20,22,20,17,21,19,18,12,13,21,22,25,18,17,18,24,17,14,19,18,22,15,24,24,21,22,16,13,9,12,13,15,14,20,13,16,21,24,16,17,15,15,19,17,22,20,20,21,18,17,14,20,15,16,13,12,15,15,14,14,9,11,11,16
)
func = nhpp(cc,2,cyclic = TRUE)
plot(func,type='l')
func = nhpp(cc,4,cyclic = TRUE)
plot(func,type='l')
func = nhpp(cc,2,cyclic = TRUE)
